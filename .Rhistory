GeneExpression_C <- scale(t(X_GSE21374),scale = F) # centered
GeneExpression_S <- scale(t(X_GSE21374),scale = T) # scaled
# cost function for CV
MISERR <- function(obs, pred, cutoff = 0.5){
ypred <- as.numeric(pred > cutoff)
tab <- table(obs, ypred)
miserr <- 1 - sum(diag(tab))/sum(tab)
return(miserr)
}
max.n.comps <- 50 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
max.n.comps <- 50 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
X_train.svd <- svd(X_train)
ind_train <-
sample(seq_len(nrow(RejectionStatus)), size = floor(nrow(RejectionStatus) * 0.80))
Y_train <- as.matrix(RejectionStatus[ind_train, 'Reject_Status'])
X_train <- as.matrix(GeneExpression_C[ind_train,])
Y_test <- as.matrix(RejectionStatus[-ind_train, 'Reject_Status'])
X_test <- as.matrix(GeneExpression_C[-ind_train,])
# cost function for CV
MISERR <- function(obs, pred, cutoff = 0.5){
ypred <- as.numeric(pred > cutoff)
tab <- table(obs, ypred)
miserr <- 1 - sum(diag(tab))/sum(tab)
return(miserr)
}
max.n.comps <- 50 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U%*%D
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = MISERR, K = 10)$delta[1]
}
npc.min <- which.min(cv.glm.pcr)
plot(1:max.n.comps, cv.glm.pcr, type = "l")
abline(v=npc.min, col =2)
V <- X_train.svd$v
Z_test <- X_test %*% V
fitdata <- data.frame(Y_train, Z_train[,1:npc.min])
mod <- glm(Y_train ~ ., data = fitdata)
preddata <- data.frame(Z_test[,1:npc.min])
pred_mod <- prediction(predict(mod, newdata = preddata), Y_test)
perf_mod <- performance(pred_mod, "sens", "fpr")
plot(perf_mod)
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = MISERR, K = 10)$delta[1]
}
# cost function for CV
MISERR <- function(obs, pred, cutoff = 0.5){
ypred <- as.numeric(pred > cutoff)
tab <- table(obs, ypred)
miserr <- 1 - sum(diag(tab))/sum(tab)
return(miserr)
}
max.n.comps <- 50 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U%*%D
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = MISERR, K = 10)$delta[1]
}
npc.min <- which.min(cv.glm.pcr)
plot(1:max.n.comps, cv.glm.pcr, type = "l")
abline(v=npc.min, col =2)
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = MISERR, K = 10)$delta[1]
}
warnings()
# cost function for CV
MISERR <- function(obs, pred, cutoff = 0.1){
ypred <- as.numeric(pred > cutoff)
tab <- table(obs, ypred)
miserr <- 1 - sum(diag(tab))/sum(tab)
return(miserr)
}
max.n.comps <- 50 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U%*%D
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = MISERR, K = 10)$delta[1]
}
npc.min <- which.min(cv.glm.pcr)
plot(1:max.n.comps, cv.glm.pcr, type = "l")
abline(v=npc.min, col =2)
plot(1:max.n.comps, cv.glm.pcr, type = "l")
abline(v=npc.min, col =2)
```{r PCR model}
V <- X_train.svd$v
Z_test <- X_test %*% V
fitdata <- data.frame(Y_train, Z_train[,1:npc.min])
mod <- glm(Y_train ~ ., data = fitdata)
preddata <- data.frame(Z_test[,1:npc.min])
pred_mod <- prediction(predict(mod, newdata = preddata), Y_test)
perf_mod <- performance(pred_mod, "sens", "fpr")
plot(perf_mod)
# cost function for CV
MISERR <- function(obs, pred, cutoff = 0.1){
ypred <- as.numeric(pred > cutoff)
tab <- table(obs, ypred)
miserr <- 1 - sum(diag(tab))/sum(tab)
return(miserr)
}
max.n.comps <- 50 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U%*%D
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = MISERR(cutoff = 0.2), K = 10)$delta[1]
}
npc.min <- which.min(cv.glm.pcr)
plot(1:max.n.comps, cv.glm.pcr, type = "l")
abline(v=npc.min, col =2)
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = MISERR(cutoff = 0.2), K = 10)$delta[1]
}
# cost function for CV
MISERR <- function(obs, pred, cutoff = 0.15){
ypred <- as.numeric(pred > cutoff)
tab <- table(obs, ypred)
miserr <- 1 - sum(diag(tab))/sum(tab)
return(miserr)
}
max.n.comps <- 50 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U%*%D
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = MISERR, K = 10)$delta[1]
}
npc.min <- which.min(cv.glm.pcr)
plot(1:max.n.comps, cv.glm.pcr, type = "l")
abline(v=npc.min, col =2)
plot(1:max.n.comps, cv.glm.pcr, type = "l")
abline(v=npc.min, col =2)
```{r PCR model}
V <- X_train.svd$v
Z_test <- X_test %*% V
fitdata <- data.frame(Y_train, Z_train[,1:npc.min])
mod <- glm(Y_train ~ ., data = fitdata)
preddata <- data.frame(Z_test[,1:npc.min])
pred_mod <- prediction(predict(mod, newdata = preddata), Y_test)
perf_mod <- performance(pred_mod, "sens", "fpr")
plot(perf_mod)
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = function()MISERR, K = 10)$delta[1]
}
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = MISERR, K = 10)$delta[1]
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = MISERR, K = 10)$delta[1]
}
npc.min <- which.min(cv.glm.pcr)
plot(1:max.n.comps, cv.glm.pcr, type = "l")
abline(v=npc.min, col =2)
tab <- table(obs, ypred)
# cost function for CV
MISERR <- function(obs, pred, cutoff = 0.15){
ypred <- as.numeric(pred > cutoff)
tab <- table(obs, ypred)
cat(tab)
miserr <- 1 - sum(diag(tab))/sum(tab)
return(miserr)
}
max.n.comps <- 5 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U%*%D
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = MISERR, K = 10)$delta[1]
}
npc.min <- which.min(cv.glm.pcr)
plot(1:max.n.comps, cv.glm.pcr, type = "l")
abline(v=npc.min, col =2)
max.n.comps <- 1 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U%*%D
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = MISERR, K = 10)$delta[1]
}
npc.min <- which.min(cv.glm.pcr)
# cost function for CV
MISERR <- function(obs, pred, cutoff = 0.20){
ypred <- as.numeric(pred > cutoff)
tab <- table(obs, ypred)
miserr <- 1 - sum(diag(tab))/sum(tab)
return(miserr)
}
max.n.comps <- 1 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U%*%D
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = MISERR, K = 10)$delta[1]
}
npc.min <- which.min(cv.glm.pcr)
plot(1:max.n.comps, cv.glm.pcr, type = "l")
abline(v=npc.min, col =2)
# cost function for CV
MISERR <- function(obs, pred, cutoff = 0.35){
ypred <- as.numeric(pred > cutoff)
tab <- table(obs, ypred)
miserr <- 1 - sum(diag(tab))/sum(tab)
return(miserr)
}
max.n.comps <- 1 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U%*%D
max.n.comps <- 5 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U%*%D
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = MISERR, K = 10)$delta[1]
}
npc.min <- which.min(cv.glm.pcr)
plot(1:max.n.comps, cv.glm.pcr, type = "l")
abline(v=npc.min, col =2)
# cost function for CV
MISERR <- function(obs, pred, cutoff = 0.35){
ypred <- as.numeric(pred > cutoff)
tab <- table(obs, ypred)
miserr <- 1 - sum(diag(tab))/sum(tab)
return(miserr)
}
max.n.comps <- 5 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U%*%D
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = {function (obs, pred) MISERR(obs, pred, cutoff = 0.25)}, K = 10)$delta[1]
}
npc.min <- which.min(cv.glm.pcr)
plot(1:max.n.comps, cv.glm.pcr, type = "l")
abline(v=npc.min, col =2)
seq(15, 50, 5)
seq(20, 50, 10)
for (j in seq(20, 50, 10)){
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = {function (obs, pred) MISERR(obs, pred, cutoff = j/100)}, K = 10)$delta[1]
}
plot(1:max.n.comps, cv.glm.pcr, type = "l")
}
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U%*%D
for (j in seq(20, 50, 10)){
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = {function (obs, pred) MISERR(obs, pred, cutoff = j/100)}, K = 10)$delta[1]
}
plot(1:max.n.comps, cv.glm.pcr, type = "l")
}
V <- X_train.svd$v
Z_test <- X_test %*% V
fitdata <- data.frame(Y_train, Z_train[,1:npc.min])
mod <- glm(Y_train ~ ., data = fitdata)
preddata <- data.frame(Z_test[,1:npc.min])
pred_mod <- prediction(predict(mod, newdata = preddata), Y_test)
perf_mod <- performance(pred_mod, "sens", "fpr")
plot(perf_mod)
plot(perf_mod)
AUC is `r performance(pred_mod, "auc")@y.values`.
## Principal component regression
```{r PCR CV}
# cost function for CV
MISERR <- function(obs, pred, cutoff = 0.35){
ypred <- as.numeric(pred > cutoff)
tab <- table(obs, ypred)
miserr <- 1 - sum(diag(tab))/sum(tab)
return(miserr)
}
max.n.comps <- 50 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U%*%D
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = {function (obs, pred) MISERR(obs, pred, cutoff = 0.45)}, K = 10)$delta[1]
}
plot(1:max.n.comps, cv.glm.pcr, type = "l")
npc.min <- which.min(cv.glm.pcr)
abline(v=npc.min, col =2)
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = {function (obs, pred) MISERR(obs, pred, cutoff = 0.35)}, K = 10)$delta[1]
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = {function (obs, pred) MISERR(obs, pred, cutoff = 0.35)}, K = 10)$delta[1]
}
plot(1:max.n.comps, cv.glm.pcr, type = "l")
npc.min <- which.min(cv.glm.pcr)
abline(v=npc.min, col =2)
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = {function (obs, pred) MISERR(obs, pred, cutoff = 0.25)}, K = 10)$delta[1]
}
plot(1:max.n.comps, cv.glm.pcr, type = "l")
npc.min <- which.min(cv.glm.pcr)
abline(v=npc.min, col =2)
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = {function (obs, pred) MISERR(obs, pred, cutoff = 0.6)}, K = 10)$delta[1]
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = {function (obs, pred) MISERR(obs, pred, cutoff = 0.6)}, K = 10)$delta[1]
}
plot(1:max.n.comps, cv.glm.pcr, type = "l")
npc.min <- which.min(cv.glm.pcr)
abline(v=npc.min, col =2)
for(i in 1:max.n.comps){
fitdata <- data.frame(Y_train, Z_train[,1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <- cv.glm(fitdata, mod, cost = {function (obs, pred) MISERR(obs, pred, cutoff = 0.7)}, K = 10)$delta[1]
}
plot(1:max.n.comps, cv.glm.pcr, type = "l")
npc.min <- which.min(cv.glm.pcr)
abline(v=npc.min, col =2)
plot(1:max.n.comps, cv.glm.pcr, type = "l")
npc.min <- which.min(cv.glm.pcr)
abline(v=npc.min, col =2)
```{r PCR model}
V <- X_train.svd$v
Z_test <- X_test %*% V
fitdata <- data.frame(Y_train, Z_train[,1:npc.min])
mod <- glm(Y_train ~ ., data = fitdata)
preddata <- data.frame(Z_test[,1:npc.min])
pred_mod <- prediction(predict(mod, newdata = preddata), Y_test)
perf_mod <- performance(pred_mod, "sens", "fpr")
plot(perf_mod)
# cost function for CV
MISERR <- function(obs, pred, cutoff = 0.5){
ypred <- as.numeric(pred > cutoff)
tab <- table(obs, ypred)
miserr <- 1 - sum(diag(tab))/sum(tab)
return(miserr)
}
max.n.comps <- 50 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
npc.min <- rep(NA, 9)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U %*% D
for (j in seq(1, 9)) {
for (i in 1:max.n.comps) {
fitdata <- data.frame(Y_train, Z_train[, 1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <-
cv.glm(fitdata, mod, cost = {
function (obs, pred)
MISERR(obs, pred, cutoff = j/10)
}, K = 10)$delta[1]
}
plot(1:max.n.comps, cv.glm.pcr, type = "l")
npc.min[j] <- which.min(cv.glm.pcr)
abline(v = npc.min[j], col = 2)
}
npc.min
# cost function for CV
MISERR <- function(obs, pred, cutoff = 0.5){
ypred <- as.numeric(pred > cutoff)
tab <- table(obs, ypred)
miserr <- 1 - sum(diag(tab))/sum(tab)
return(miserr)
}
max.n.comps <- 50 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
npc.min <- rep(NA, 9)
npc.val <- rep(NA, 9)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U %*% D
for (j in seq(1, 9)) {
for (i in 1:max.n.comps) {
fitdata <- data.frame(Y_train, Z_train[, 1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <-
cv.glm(fitdata, mod, cost = {
function (obs, pred)
MISERR(obs, pred, cutoff = j/10)
}, K = 10)$delta[1]
}
plot(1:max.n.comps, cv.glm.pcr, type = "l")
npc.min[j] <- which.min(cv.glm.pcr)
npc.val[j] <- cv.glm.pcr[npc.min[j]]
abline(v = npc.min[j], col = 2)
}
npc.min
npc.val
r performance(pred_mod, "auc")@y.values
performance(pred_mod, "auc")@y.values
V <- X_train.svd$v
Z_test <- X_test %*% V
fitdata <- data.frame(Y_train, Z_train[,1:npc.min])
mod <- glm(Y_train ~ ., data = fitdata)
preddata <- data.frame(Z_test[,1:npc.min])
pred_mod <- prediction(predict(mod, newdata = preddata), Y_test)
perf_mod <- performance(pred_mod, "sens", "fpr")
plot(perf_mod)
plot(perf_mod)
performance(pred_mod, "auc")@y.values
# cost function for CV
MISERR <- function(obs, pred, cutoff = 0.5){
ypred <- as.numeric(pred > cutoff)
tab <- table(obs, ypred)
miserr <- 1 - sum(diag(tab))/sum(tab)
return(miserr)
}
max.n.comps <- 50 #random nr
cv.glm.pcr <- rep(NA, max.n.comps)
npc.min <- rep(NA, 9)
npc.val <- rep(NA, 9)
X_train.svd <- svd(X_train)
U <- X_train.svd$u
D <- diag(X_train.svd$d)
Z_train <- U %*% D
for (j in seq(1, 9)) {
for (i in 1:max.n.comps) {
fitdata <- data.frame(Y_train, Z_train[, 1:i])
mod <- glm(Y_train ~ ., data = fitdata, family = "binomial")
cv.glm.pcr[i] <-
cv.glm(fitdata, mod, cost = {
function (obs, pred)
MISERR(obs, pred, cutoff = j/10)
}, K = 10)$delta[1]
}
plot(1:max.n.comps, cv.glm.pcr, type = "l")
npc.min[j] <- which.min(cv.glm.pcr)
npc.val[j] <- cv.glm.pcr[npc.min[j]]
abline(v = npc.min[j], col = 2)
}
npc.m <- npc.min[which.min(npc.val)]
plot(1:max.n.comps, cv.glm.pcr, type = "l")
npc.min[j] <- which.min(cv.glm.pcr)
npc.val[j] <- cv.glm.pcr[npc.min[j]]
abline(v = npc.min[j], col = 2)
}
npc.m <- npc.min[which.min(npc.val)]
```{r PCR model}
V <- X_train.svd$v
Z_test <- X_test %*% V
fitdata <- data.frame(Y_train, Z_train[,1:npc.m])
mod <- glm(Y_train ~ ., data = fitdata)
preddata <- data.frame(Z_test[,1:npc.m])
pred_mod <- prediction(predict(mod, newdata = preddata), Y_test)
perf_mod <- performance(pred_mod, "sens", "fpr")
plot(perf_mod)
performance(pred_mod, "auc")@y.values
